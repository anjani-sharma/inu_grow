"""Add summary column to CV

Revision ID: ca4c6b2cccb8
Revises: 
Create Date: 2025-04-10 07:20:36.957621

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'ca4c6b2cccb8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('analysis_result')
    op.drop_table('parsed_cv')
    with op.batch_alter_table('cv', schema=None) as batch_op:
        batch_op.add_column(sa.Column('summary', sa.Text(), nullable=True))
        batch_op.alter_column('filename',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('job_description', schema=None) as batch_op:
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('job_description', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('cv', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.alter_column('filename',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('summary')

    op.create_table('parsed_cv',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('cv_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('parsed_at', sa.DATETIME(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('position', sa.VARCHAR(length=255), nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), nullable=True),
    sa.Column('phone', sa.VARCHAR(length=255), nullable=True),
    sa.Column('linkedin', sa.VARCHAR(length=255), nullable=True),
    sa.Column('website', sa.VARCHAR(length=255), nullable=True),
    sa.Column('location', sa.VARCHAR(length=255), nullable=True),
    sa.Column('summary', sa.TEXT(), nullable=True),
    sa.Column('work_experience', sqlite.JSON(), nullable=True),
    sa.Column('education', sqlite.JSON(), nullable=True),
    sa.Column('skills', sqlite.JSON(), nullable=True),
    sa.Column('certifications', sqlite.JSON(), nullable=True),
    sa.Column('languages', sqlite.JSON(), nullable=True),
    sa.Column('projects', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('analysis_result',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('cv_text', sa.TEXT(), nullable=False),
    sa.Column('job_desc', sa.TEXT(), nullable=False),
    sa.Column('matches', sa.TEXT(), nullable=True),
    sa.Column('match_percentage', sa.FLOAT(), nullable=True),
    sa.Column('optimized_cv', sa.TEXT(), nullable=True),
    sa.Column('cover_letter', sa.TEXT(), nullable=True),
    sa.Column('analysis_results', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
